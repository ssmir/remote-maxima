Import('env')

maximaInstance = env.SharedObject('MaximaInstance.cc')

if ('CPPDEFINES' in env) and ('HAS_ICE' in env['CPPDEFINES']):
    NodeLibSource = File(['ServantLocator.cc', 'Security.cc', 'AccessDeniedServant.cc',
        'Node.cc', 'InfoService.cc', 'Service.cc', 'ServiceContext.cc'])
    MaximaServiceSource = File(['Maxima.cc', 'MaximaFactoryI.cc', 'MaximaResourceI.cc',
        'FileServerImpl.cc', 'MasterFactoryI.cc', 'FileServer.cc'])
    
    nodeLib = env.SharedLibrary(target = "#lib/IARnet", source = [NodeLibSource],
        CPPDEFINES = 'NODEDLL')
    env.Install('/lib/', nodeLib)
    #apiLib = env.StaticLibrary(target = '#lib/MaximaAPI', source = ['MaximaInstance.cc'])
    
    env.Install('/bin/', env.Program(target = "#bin/node", source = ['main.cc'],
        LIBS = [nodeLib, env['LIBS']]))
    
    env.Install('/lib/', env.SharedLibrary(target = '#lib/MaximaService',
        source = [maximaInstance, MaximaServiceSource], LIBS = [nodeLib,
        env['LIBS'], 'boost_regex-mt', 'boost_filesystem-mt', 'boost_system-mt']))

env.Install('/lib/', env.SharedLibrary(target = '#lib/MaximaInstance',
    source = [maximaInstance, 'ru_isa_dcs_ssmir_maxima_MaximaInstance.cc'],
    LIBS = ['boost_regex-mt', 'boost_filesystem-mt', 'boost_system-mt'],
    SHLIBSUFFIX = env['JNI_SUFFIX']))

